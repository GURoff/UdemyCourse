// --- Основы ООП. Прототипно-ориентированное наследование --- //
"use strict";

let str = "some";
let strObj = new String(str);   //на освноании первой строки мы создаем еще одну строку. 

console.log(typeof(str));       //сначала получаем строку
console.log(typeof(strObj));    // потом получаем объект

//console.dir([1,2,3]);

const soldier = { //Харакетирстика всех солдат
    health: 400,
    armor: 100,
    sayHello: function() {
        console.log("Hello");
    }
};

//Создание нового объекта
const John = Object.create(soldier); //Мы создаем новый объект Джон, который будет прототипно наследоваться от солдата. 

// const John = { //Характеристика одного рядового солдата
//     health: 100
// };

// //Это устаревший формат!
// //John.__proto__ = soldier; //Прототип Джона = солдат. *Два подчеркивания __proto__. 

// --- Нынешний формат! --- //
// Object.setPrototypeOf(John, soldier); //Первый аргумент - объект, которому хотим назначить прототип. Второй аругмент - тот объект, прототип которого мы устанавливаем. 
// //Мы установили прототип Джона от Солдата. 

// //console.log(John.armor);
John.sayHello();
